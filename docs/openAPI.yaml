openapi: "3.0.0"
info:
  title: Credit Cards API
  version: 1.0.0
  description: >
    REST API for managing corporate credit card accounts, cards, transactions, statements, payments, and inbound integration webhooks.
servers:
  - url: https://api.qred.com/cards/v1

components:
  schemas:
    AccountSummaryDTO:
      type: object
      required:
        [accountId, companyId, creditLimit, availableCredit, statementBalance]
      properties:
        accountId: { type: string, format: uuid }
        companyId: { type: string, format: uuid }
        creditLimit: { type: number, format: decimal }
        availableCredit: { type: number, format: decimal }
        statementBalance: { type: number, format: decimal }
        nextDueDate: { type: string, format: date }
        totalDue: { type: number, format: decimal }
        minimumDue: { type: number, format: decimal }

    AccountDetailDTO:
      allOf:
        - $ref: "#/components/schemas/AccountSummaryDTO"
        - type: object
          properties:
            cycleStartDay: { type: integer }
            paidAmount: { type: number, format: decimal }

    CardSummaryDTO:
      type: object
      required: [cardId, panLast4, status]
      properties:
        cardId: { type: string, format: uuid }
        panLast4: { type: string }
        expiryDate: { type: string, format: date }
        status: { type: string }
        activatedAt: { type: string, format: date-time }
        blockedAt: { type: string, format: date-time }

    CardDetailDTO:
      allOf:
        - $ref: "#/components/schemas/CardSummaryDTO"
        - type: object
          properties:
            panToken: { type: string }

    CardUpdateRequest:
      type: object
      properties:
        status: { type: string }

    TransactionDTO:
      type: object
      required: [transactionId, postedAt, amount, currency, status]
      properties:
        transactionId: { type: string, format: uuid }
        postedAt: { type: string, format: date-time }
        amount: { type: number, format: decimal }
        currency: { type: string }
        merchantName: { type: string }
        category: { type: string }
        status: { type: string }

    TransactionPageDTO:
      type: object
      properties:
        cardId: { type: string, format: uuid }
        nextCursor: { type: string, nullable: true }
        transactions:
          type: array
          items: { $ref: "#/components/schemas/TransactionDTO" }

    StatementSummaryDTO:
      type: object
      required:
        [statementId, periodStart, periodEnd, dueDate, totalDue, minimumDue]
      properties:
        statementId: { type: string, format: uuid }
        periodStart: { type: string, format: date }
        periodEnd: { type: string, format: date }
        dueDate: { type: string, format: date }
        totalDue: { type: number, format: decimal }
        minimumDue: { type: number, format: decimal }
        paidAmount: { type: number, format: decimal }

    StatementDetailDTO:
      allOf:
        - $ref: "#/components/schemas/StatementSummaryDTO"
        - type: object
          properties:
            paidAt: { type: string, format: date-time, nullable: true }
            pdfUrl: { type: string, format: uri }

    PaymentRequest:
      type: object
      required: [amount, currency, paymentMethod]
      properties:
        amount: { type: number, format: decimal }
        currency: { type: string }
        paymentMethod: { type: string }

    PaymentReceiptDTO:
      type: object
      properties:
        paymentId: { type: string, format: uuid }
        accountId: { type: string, format: uuid }
        statementId: { type: string, format: uuid }
        amount: { type: number, format: decimal }
        currency: { type: string }
        paymentMethod: { type: string }
        receivedAt: { type: string, format: date-time }

paths:
  /accounts:
    get:
      summary: List all credit accounts accessible by caller
      responses:
        "200":
          description: Successfully retrieved list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountSummaryDTO"

  /accounts/{accountId}:
    get:
      summary: Retrieve detailed account by ID
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successfully retrieved detailed account information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailDTO"

  /accounts/{accountId}/cards:
    get:
      summary: List all cards for the specified account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved list of cards for the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardSummaryDTO"

  /cards/{cardId}:
    patch:
      summary: Activate, block, unblock or update card settings
      parameters:
        - name: cardId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardUpdateRequest"
      responses:
        "200":
          description: Successfully updated card and returned its current state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardDetailDTO"

  /cards/{cardId}/transactions:
    get:
      summary: Cursorâ€‘paginated list of transactions for a card
      parameters:
        - name: cardId
          in: path
          required: true
          schema: { type: string }
        - name: cursor
          in: query
          schema: { type: string }
        - name: limit
          in: query
          schema: { type: integer, default: 20 }
      responses:
        "200":
          description: Successfully retrieved paginated list of transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionPageDTO"

  /accounts/{accountId}/statements:
    get:
      summary: List all billing statements for an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successfully retrieved list of billing statements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatementSummaryDTO"

  /accounts/{accountId}/statements/{periodStart}:
    get:
      summary: Retrieve a single statement (includes PDF URL)
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: periodStart
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Successfully retrieved detailed statement information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatementDetailDTO"
